# -*- coding: utf-8 -*-
"""accelerometer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SFU6oIB70_08dPxhitClVSMc_RrNS0wL
"""

import pandas as pd
import seaborn as sns
import numpy as np
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv(r"/content/Data_97000_Samples (2).csv")
df

#first 5 rows will appear
df.head()

#prints the information
df.info()

#filling the null values
df.fillna(0, inplace=True)
df

#checks duplicated values
df.duplicated().sum()

#Differtaite the values
df.head().style.background_gradient(cmap='Blues')

df.describe().style.background_gradient(cmap='Reds')

#Describe the stastical values
df.describe()

#List outs the columns
list(df)

import math
numeric_features.remove("ID")
num_features = len(numeric_features)
rows = math.ceil(num_features / 2)  # Calculate number of rows

plt.figure(figsize=(10, 3 * rows))  # Adjust figure size based on the number of rows
plt.suptitle('Univariate Analysis of Numerical Features', fontsize=20, fontweight='bold', alpha=0.9, y=1.)

for i in range(num_features):
    plt.subplot(rows, 2, i+1)  # 2 columns for each row
    sns.kdeplot(x=df[numeric_features[i]], color='red')
    plt.xlabel(numeric_features[i])
    plt.tight_layout()

# Save plot
# plt.savefig('./images/Univariate_Num.png')

import matplotlib.pyplot as plt
import numpy as np

# Sample Data
x = np.linspace(0, 10, 100)
y = np.sin(x)

# Plot
plt.plot(x, y, label="sin(x)")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Line Plot Example")
plt.legend()
plt.show()
#To show  the plot of the dataset

import matplotlib.pyplot as plt
import pandas as pd

# Sample Dataset
data = {'X': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        'Y': [2, 4, 1, 8, 7, 5, 9, 3, 6, 10]}
df = pd.DataFrame(data)

# Scatter Plot
plt.scatter(df['X'], df['Y'], color='blue', alpha=0.7)

# Labels and Title
plt.xlabel("X values")
plt.ylabel("Y values")
plt.title("Scatter Plot Example")

# Show Plot
plt.show()
# To show thw scatter plot

print(df.describe())

df.columns = df.columns.str.strip()
df

import matplotlib.pyplot as plt
import pandas as pd

# Sample Dataset
data = {'Category': ['A', 'B', 'C', 'D'],
        'Values': [30, 20, 40, 10]}
df = pd.DataFrame(data)

# Pie Chart
plt.figure(figsize=(6, 6))
plt.pie(df['Values'], labels=df['Category'], autopct='%1.1f%%', colors=['blue', 'red', 'green', 'purple'])

# Title
plt.title("Pie Chart Example")

# Show Chart
plt.show()

# importing the required module
import matplotlib.pyplot as plt

# x axis values
x = [1,2,3]
# corresponding y axis values
y = [2,4,1]

# plotting the points
plt.plot(x, y)

# naming the x axis
plt.xlabel('x - axis')
# naming the y axis
plt.ylabel('y - axis')

# giving a title to my graph
plt.title('My first graph!')

# function to show the plot
plt.show()

